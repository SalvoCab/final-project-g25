services:
  keycloak:
    image: keycloak/keycloak
    ports:
      - '9095:8080'
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: password
      PROXY_ADDRESS_FORWARDING: true
      KC_HOSTNAME: http://localhost:9095
      KEYCLOAK_FRONTEND_URL: http://localhost:9095
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: true
      KC_HEALTH_ENABLED: true
    volumes:
      - ./kc1-realm.json:/opt/keycloak/data/import/kc1-realm.json
    command:
      - start-dev
      - --import-realm
    networks:
      - kfk-net
      - keycloak

  kafka:
    image: 'bitnami/kafka:3.7'
    hostname: kafka
    ports:
      - "9092:9092"
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:29092,CONTROLLER://:9093,PLAINTEXT_HOST://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      - kfk-net

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9091:8080"
    environment:
      KAFKA_CLUSTER_0_NAME: kafka
      KAFKA_CLUSTER_0_BOOTSTRAPSERVERS: kafka:29092
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - kfk-net

  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - postgres


  prometheus:
    image: prom/prometheus:latest
    container_name: ${PROMETHEUS_CONTAINER_NAME}
    restart: always
    env_file: .env
    volumes:
      - ./monitoring/configs/prometheus.yaml/:/etc/prometheus/prometheus.yml
    ports:
      - ${PROMETHEUS_PORT}:${DEFAULT_PROMETHEUS_PORT}
    networks:
      - monitoring



  loki:
    pull_policy: always
    image: grafana/loki
    container_name: ${LOKI_CONTAINER_NAME}
    env_file: .env
    volumes:
      - ./monitoring/configs/local-config.yaml:/etc/loki/local-config.yaml
    ports:
      - ${LOKI_PORT}:${LOKI_PORT}
    command:
      - -config.expand-env=true
      - -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring


  grafana:
    pull_policy: always
    image: grafana/grafana
    container_name: ${GRAFANA_CONTAINER_NAME}
    restart: always
    env_file: .env
    volumes:
      - ./monitoring/configs/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./monitoring/configs/dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./monitoring/dashboards/loki_dashboard.json:/var/lib/grafana/dashboards/loki_dashboard.json
      - ./monitoring/dashboards/prometheus_dashboard.json:/var/lib/grafana/dashboards/prometheus_dashboard.json
    ports:
      - ${GRAFANA_PORT}:${GRAFANA_PORT}
    depends_on:
      - loki
      - prometheus
    networks:
      - monitoring


  promtail:
    pull_policy: always
    image: grafana/promtail
    container_name: ${PROMTAIL_CONTAINER_NAME}
    env_file: .env
    volumes:
      - ./customer_relationship_management/src/log/crm_logfile.log:/var/log/crm_logfile.log
      - ./monitoring/configs/promtail.yaml:/etc/promtail/promtail.yaml
    ports:
      - ${PROMTAIL_PORT}:${PROMTAIL_PORT}
    depends_on:
      - loki
    command:
      - -config.expand-env=true
      - -config.file=/etc/promtail/config.yml
    networks:
      - monitoring

networks:
  kfk-net:
    driver: bridge
  keycloak:
    driver: bridge
  postgres:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
  postgres_data:
  kafka_data:
  prometheus_data:
    name: prometheus_data
  grafana_data:
    name: grafana_data